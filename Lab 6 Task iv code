/* Filename: Lab 6 Task iv.cpp
Author: Brandon Mills Jacinto
Date: 20/03/2025
*/
#include "mbed.h" // Mbed Library for hardware control
#include "display.h" // Display library used for LCD

float TemperatureReading; // Variable to store temperature reading
float GasSensorReading; // Variable to store gas sensor reading
bool GasSensorAlarm; // Function for gas alarm 
bool TemperatureAlarm; // Function for temperature alarm 
AnalogIn GasSensor(A2); // Analog input for gas sensor (connected to pin A2)
AnalogIn TemperatureSensor(A1); // Analog input  for temperature sensor (connected to pin A1)
#define TIME_INCREMENT_MS 10 // Time increment for the main loop (in milliseconds)
#define THE_KEYPAD_NUMBER_OF_ROWS 4 // Number of rows in keypad
#define THE_KEYPAD_NUMBER_OF_COLUMNS 4 // Number of columns in keypad
#define THE_NUMBER_OF_KEYS 4 // Number of keys in the code sequence
#define DEBOUNCE_KEY_OF_TIME_MS 50 // Debounce time for keypad (ms)

int Tick = 0; // Declares an integer variable named 'Tick' and initialises it to 0.
// Lines 22-24 declares functions
void Init();
void LCDUpdate();
void AlarmActivationUpdate();   

int main()
{  while( true ) { // Infinite loop
   LCDUpdate(); // Updates the LCD display
AlarmActivationUpdate(); // Updates the alarm status based on sensor readings
      ThisThread::sleep_for(10ms); // Delay for 10ms
    }
}
void LCDUpdate() { // Updates LCD display function
  if (Tick % 100 == 0) { // Ticks for 1 second
  if(GasSensorAlarm == true && TemperatureAlarm == true) { // If both gas and temperature alarms are active...
   displayInit(DISPLAY_CONNECTION_I2C_PCF8574_IO_EXPANDER); // Initialise the LCD
 displayCharPositionWrite (0,0); // This sets the cursor to the first line and the first column
 displayStringWrite("ALERT!"); // Display "ALERT!" message
 displayCharPositionWrite (0,1);  // This sets the cursor to the second line and the first column
  displayStringWrite("GAS IS OVER LIMIT!"); // Display "GAS IS OVER LIMIT!" message
 displayCharPositionWrite (0,2); // This sets the cursor to the third line and the first column
displayStringWrite("TEMP IS OVER LIMIT!"); // Display "TEMP IS OVER LIMIT!" message
        }
else if(GasSensorAlarm == true && TemperatureAlarm == false) { // If gas alarm is active and not temp alarm...
displayInit(DISPLAY_CONNECTION_I2C_PCF8574_IO_EXPANDER); // Initialise the LCD
    displayCharPositionWrite ( 0,0 ); // This sets the cursor to the first line and the first column
    displayStringWrite("ALERT!"); // Display "ALERT!" message
displayCharPositionWrite (0,1); // This sets the cursor to the second line and the first column
            displayStringWrite("GAS IS OVER LIMIT!"); // Display "GAS IS OVER LIMIT!" message
        }
     else if(TemperatureAlarm == true && GasSensorAlarm == false) { // If temp alarm is active and not gas alarm... 
         displayInit( DISPLAY_CONNECTION_I2C_PCF8574_IO_EXPANDER ); // Initialise the LCD
         displayCharPositionWrite ( 0,1 ); // This sets the cursor to the second line and the first column
     displayStringWrite("TEMP IS OVER LIMIT!") ; // Display "TEMP IS OVER LIMIT!" message
        }
 else if(TemperatureAlarm == false && GasSensorAlarm == false) { // If gas alarm and temp alarm are not active... 
     displayInit( DISPLAY_CONNECTION_I2C_PCF8574_IO_EXPANDER ); // Initialise the LCD
       displayCharPositionWrite ( 0,0 ); // This sets the cursor to the first line and the first column
           displayStringWrite("Gas and Temp is in  SAFE LIMITS!"); // Display "Gas and Temp is in  SAFE LIMITS!" message
        }
    }
   Tick = Tick + 1; // Tick counter goes up by +1
}
void AlarmActivationUpdate()
{
TemperatureReading = TemperatureSensor.read()*330; // Reads temp sensor and converts to celcius
 if(TemperatureReading >= 22) { // If temp sensor is more than and equal to 22...
   TemperatureAlarm = true; //... Temp alarm is on
} else { // Else...
  TemperatureAlarm = false; //... Temp alarm is off
    }
GasSensorReading = GasSensor.read()*3.3; // Reads gas sensor and converts to ppm
 if(GasSensorReading >= 0.8) { // If gas sensor is more than and equal to 0.8...
   GasSensorAlarm = true; //... Gas alarm is on
} else { // Else...
    GasSensorAlarm = false; //... Gas alarm is off
    }
}

